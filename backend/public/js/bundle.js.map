{"version":3,"sources":["webpack://AppJSFullstack/./node_modules/timeago.js/esm/lang/en_US.js","webpack://AppJSFullstack/./node_modules/timeago.js/esm/lang/zh_CN.js","webpack://AppJSFullstack/./node_modules/timeago.js/esm/register.js","webpack://AppJSFullstack/./node_modules/timeago.js/esm/utils/date.js","webpack://AppJSFullstack/./node_modules/timeago.js/esm/index.js","webpack://AppJSFullstack/./frontend/UI.js","webpack://AppJSFullstack/./frontend/services/ProductService.js","webpack://AppJSFullstack/./node_modules/timeago.js/esm/format.js","webpack://AppJSFullstack/./frontend/app.js"],"names":["EN_US","ZH_CN","Locales","register","locale","func","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","diff","idx","unit","Math","floor","productService","this","URI","response","fetch","json","product","res","method","body","productId","headers","products","getProducts","productsCardContainer","document","getElementById","innerHTML","forEach","div","createElement","date","opts","className","imagePath","title","price","_id","created_at","localeFunc","agoIn","totalSec","abs","length","toString","relativeDate","appendChild","postProduct","clearProductForm","renderProducts","reset","message","colorMessage","secondsToRemove","createTextNode","container","querySelector","productForm","insertBefore","setTimeout","remove","deleteProduct","addEventListener","e","value","description","image","files","formData","FormData","append","ui","addANewProduct","renderMessage","preventDefault","target","classList","contains","getAttribute"],"mappings":"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","file":"js/bundle.js","sourcesContent":["var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map","//Va a contener el codigo referido a la interface. Va a interactuar con el navegador\r\n\r\nimport ProductService from './services/ProductService';\r\nconst productService = new ProductService(); //Importa la clase con los metodos\r\n\r\nimport { format } from 'timeago.js'; //Este metodo toma una fecha y la formatea correctamente\r\n\r\nclass UI {\r\n\r\n    async renderProducts() {\r\n        const products = await productService.getProducts(); //Llama los productos desde el backend\r\n        const productsCardContainer = document.getElementById('products-cards'); //Instancia el contenedor de los productos\r\n        productsCardContainer.innerHTML = ''; //El contenedor va a estar vacio cada vez que se cargue la app\r\n        products.forEach(product => {\r\n            const div = document.createElement('div'); //Va a crear un nuevo contenedor\r\n            div.className = '';\r\n            div.innerHTML = `\r\n                <div class=\"card m-2\">\r\n                    <div class=\"row no-gutters\">\r\n                        <div class=\"col-md-4\">\r\n                            <img src=\"http://localhost:3000${product.imagePath}\" class=\"img-fluid\" alt=\"\">\r\n                        </div>\r\n                        <div class=\"col-md-8\">\r\n                            <div class=\"card-block px-2\">\r\n                                <h4 class=\"card-title\">${product.title}</h4>\r\n                                <p class=\"card-text\">${product.price}</p>\r\n                                <a href=\"#\" class=\"btn btn-danger delete\" _id=\"${product._id}\">X</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-footer w-100 text-muted\">\r\n                        ${format(product.created_at)}\r\n                    </div>\r\n                </div>\r\n            `;\r\n            productsCardContainer.appendChild(div); //Este div creado pasa a formar parte del contenedor\r\n        });\r\n    }\r\n\r\n    async addANewProduct(product) {\r\n        await productService.postProduct(product);\r\n        this.clearProductForm(); //Llama al metodo para resetear el formulario\r\n        this.renderProducts(); //Refresca la pagina para incluir el nuevo producto\r\n    }\r\n\r\n    clearProductForm() {\r\n        document.getElementById('product-form').reset(); //Borra los datos del formulario\r\n    }\r\n\r\n    renderMessage(message, colorMessage, secondsToRemove) {\r\n        const div = document.createElement('div');\r\n        div.className = `alert alert-${colorMessage} message`;\r\n        div.appendChild(document.createTextNode(message));\r\n\r\n        const container = document.querySelector('.col-md-4'); //Selecciona el contenedor principal\r\n        const productForm = document.querySelector('#product-form');\r\n\r\n        container.insertBefore(div, productForm); //Va a insertar el nuevo elemento dentro de container, antes del formulario\r\n        setTimeout(() => { //Timer para que desaparezca el mensaje\r\n            document.querySelector('.message').remove(); //Va a remover todos los elementos con clase 'message'\r\n        }, secondsToRemove);\r\n    }\r\n\r\n    async deleteProduct(productId) {\r\n        await productService.deleteProduct(productId);\r\n        this.renderProducts();\r\n    }\r\n\r\n}\r\n\r\nexport default UI;","class ProductService {\r\n\r\n    constructor(){\r\n        this.URI = 'http://localhost:3000/api/products'\r\n    }\r\n\r\n    async getProducts() {\r\n        const response = await fetch(this.URI); //Consulta los datos del backend. Si no especifico un metodo, por defecto es GET\r\n        const products = await response.json(); //Convierte la respuesta en un json para que pueda ser interpretado\r\n        return products;\r\n    }\r\n\r\n    async postProduct(product) {\r\n        const res = await fetch(this.URI, {\r\n            method: 'POST', //Especifica el metodo para crear un dato nuevo\r\n            body: product //Lo enviado va a ser un producto\r\n        });\r\n        const data = await res.json(); //Convierte la respuesta en un json\r\n        \r\n    }\r\n\r\n    async deleteProduct(productId) {\r\n        const res = await fetch(`${this.URI}/${productId}`, {\r\n            headers: {\r\n                'Content-Type': 'aplication/json' //Lo enviado va a ser solo datos\r\n            },\r\n            method: 'DELETE'\r\n        });\r\n        const data = await res.json();\r\n    }\r\n\r\n}\r\n\r\nexport default ProductService;","import { formatDiff, diffSec } from './utils/date';\nimport { getLocale } from './register';\n/**\n * format a TDate into string\n * @param date\n * @param locale\n * @param opts\n */\nexport var format = function (date, locale, opts) {\n    // diff seconds\n    var sec = diffSec(date, opts && opts.relativeDate);\n    // format it with locale\n    return formatDiff(sec, getLocale(locale));\n};\n//# sourceMappingURL=format.js.map","import './styles/app.css';\r\n\r\nimport UI from './UI';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => { //Una vez cargue el DOM...\r\n    const ui = new UI();\r\n    ui.renderProducts();\r\n})\r\n\r\ndocument.getElementById('product-form') //Llama al formulario de nuevo producto\r\n    .addEventListener('submit', e => {  //Agrega una escucha en el evento submit\r\n        const title = document.getElementById('title').value; //Guarda cada valor en una nueva variable\r\n        const price = document.getElementById('price').value;\r\n        const description = document.getElementById('description').value;\r\n        const image = document.getElementById('image').files;\r\n\r\n        const formData = new FormData(); //Es como un formulario virtual donde se van a guardar los datos ingresados\r\n        formData.append('image', image[0]);\r\n        formData.append('title', title);\r\n        formData.append('price', price);\r\n        formData.append('description', description);\r\n\r\n        const ui = new UI(); //Llama a la clase\r\n        ui.addANewProduct(formData); //utiliza el metodo de la clase\r\n        ui.renderMessage('New Product Added', 'success', 3000);//Cuando se cree el nuevo producto va a parecer ese mensaje\r\n\r\n        e.preventDefault(); //Evita que se refresque la pagina cuando das submit\r\n    });\r\n\r\n    document.getElementById('products-cards')\r\n        .addEventListener('click', e => { //Cuando exista un click\r\n            if (e.target.classList.contains('delete')) { //Si el click es sobre un elemento con clase 'delete'\r\n                const ui = new UI();\r\n                ui.deleteProduct(e.target.getAttribute('_id'))\r\n                ui.renderMessage('Product removed', 'danger', 2000);\r\n            }\r\n            e.preventDefault();\r\n        });"],"sourceRoot":""}